---
Title: "County-Level Value Calculation of Local Recharge"
---


# Objective:
+ For each country, calculate the monetary value of local recharge.
+ GEP 1000USD
+ Create a png map of global GEP values by country.

+ Note:
  + The main source of groundwater local recharge is from precipitation infiltrating into the ground. Given the high variability in precipitation patterns across different regions and years, local recharge rates can vary significantly. 
  + Also, past several years' precipitation can influence current groundwater recharge rates, depending on factors such as geography, land use, and aquifer characteristics. Recent studies have shown that such lag effects can range from a few months to several years. This study only accounts for the current year's precipitation due to model limitations. However, I am not aware of any hydrological models that can accurately capture these lag effects and account for aquifer characteristics on a global scale.
  + Given these complexities, the values calculated here should be viewed as conservative estimates, providing a baseline understanding of local recharge values. 


# Setup
```{r}
library(here)
i_am("Scr/Code/5_GEP_calculation.qmd")

# /*===== Load R packages =====*/
library(data.table)
library(dplyr)
library(ggplot2)

library(sf)

library(countrycode)

# /*===== Path configurations =====*/
source(here("Scr/Code/0_path_config.R"))
```



# Data Prerequisites

+ Groundwater Use Data
  + FAO AQUASTAT

+ Initial Groundwater Storage
  + Jasechko_et_al_2024
    + AnnualGroundwaterElevation.csv
    + AnnualDepthToGroundwater.csv

+ Global Electricity Prices
  + IEA: global-electricity-per-kwh-pricing-2021.xlsx
  + some countries' data are missing.


```{r}
# /*===== Country Boundary =====*/
ctry_bd <- 
  st_read(here(raw_dir, "z_ee_r250_correspondence.gpkg")) %>%
  select(iso3_r250_id, iso3_r250_label, iso3_r250_name)

ctry_dt <- data.table(st_drop_geometry(ctry_bd))

ctry_names <- ctry_dt$iso3_r250_name
ctry_iso3 <- ctry_dt$iso3_r250_label

# /*===== Groundwater Recharge Values =====*/
l_val_dt <- 
  readRDS(file.path(final_dir, "l_val_dt_ctry.rds")) %>%
  .[, .(iso3_r250_label, l_mean_mm)] %>%
  .[, l_mean_m := l_mean_mm / 1000]

# /*===== Groundwater Use Data (10^9 m3/year) =====*/
gw_use_dt <- 
  fread(file.path(raw_dir, "GroundwaterUseData/AQUASTAT Dissemination System.csv")) %>%
  .[Year == 2020, .(country = Area, gw_wdw_bil = Value)] %>%
  .[, iso3_r250_label := countrycode(country, "country.name", "iso3c")] %>%
  .[, gw_wdw := gw_wdw_bil * 1e9]

# /*===== Electricity Prices =====*/
elec_price_dt <-
  rio::import(
    file.path(raw_dir, "EnergyPrices/global-electricity-per-kwh-pricing-2021.xlsx"),
    setclass = "data.table"
  ) %>%
  .[,.(
    country_code = `Country code`, 
    p_kwh = `Average price of 1KW/h (USD)`
  )] %>%
  .[, iso3_r250_label := countrycode(country_code, "iso2c", "iso3c")]


# /*===== Merge datasets =====*/
note_map <- c(
  l_mean_m = "no local recharge data available",
  gw_wdw   = "no groundwater withdrawal data available",
  p_kwh    = "no electricity price data available"
)


gwr_val_dt <- 
  # add local recharge values
  merge(ctry_dt, l_val_dt,   by = "iso3_r250_label", all.x = TRUE) |>
  # add groundwater use data
  merge(gw_use_dt,           by = "iso3_r250_label", all.x = TRUE) |>
  # add electricity prices
  merge(elec_price_dt,       by = "iso3_r250_label", all.x = TRUE)

# add note that concatenates *all* applicable messages
gwr_val_dt[
  , note := {
      na_cols <- names(note_map)[is.na(.SD)]     # which tracked cols are NA in this row?
      if (length(na_cols) == 0) "" # none missing
      else paste(note_map[na_cols], collapse = "; ")
    },
  .SDcols = names(note_map), 
  by = .I
]
```


# GEP Calculation

Let $H_0$ be the total head when recharging does not occur, and $H_1$ be the total head when recharging occurs. Total head is the sum of the vertical distance from pump to static water level (i.e., depth to static water table, $R$) and the additional head loss due to friction in the pipes (i.e., drawdown and friction loss, $F$). Thus, $H = R + F$.
Assuming that the friction loss $F$ is constant regardless of the pumping, the difference in total costs to pump $Q \, m^3$ of water in the presence and absence of groundwater recharge is given by:
$$
\begin{aligned}
TC(H_0; e_r) - TC(H_1; e_r) 
  &= [c(R_0 + F; e_r) \cdot Q - c(R_1 + F; e_r)] Q \\
  &= A [(R_0 + F) - (R_1 + F)] Q \\
  &= A (R_0 - R_1) Q \\
  &= A \Delta R Q \\
\end{aligned}
$$

, where $\Delta R = R_0 - R_1$ is the change in the depth of the water table due to groundwater recharge. With the estimated groundwater recharge rate $\Delta R$ from the InVEST SWY model, I estimate the value of groundwater recharge service proxied by the savings in pumping costs due to groundwater recharge.

```{r}

# /*===== Function to calculate pumping cost per m3 =====*/
fun_get_A <- function(e_r, gamma = 9810, eta = 0.5) {
  (gamma * e_r) / (eta * 3.6e6)
}

# /*===== Calculate GEP values =====*/
gwr_val_dt %>%
  .[, A := fun_get_A(e_r = p_kwh)] %>%
  .[, gep := round(A * l_mean_m * gw_wdw, 2)]

hist(gwr_val_dt$gep, breaks = 50)
summary(gwr_val_dt$gep)

# sum(gwr_val_dt$gep, na.rm = TRUE)
# sum(gwr_val_dt$gep, na.rm = TRUE) / 1e3

# gwr_val_dt[iso3_r250_label == "USA",]

# 7211276 USD = 7.21 million USD

# Save as a csv (final output)
write.csv(
  gwr_val_dt[, .(iso3_r250_id, iso3_r250_label, iso3_r250_name, ground_water_gep = gep)],
  file.path(final_dir, "ground_water_gep.csv"),
  row.names = FALSE
)

# === Map of GEP value === #
gwr_val_dt_sf <- 
  merge(
    ctry_bd,
    gwr_val_dt[, .(iso3_r250_id, gep)],
    by = "iso3_r250_id",
    all.x = TRUE
  )

ggplot() +
  geom_sf(
    data = gwr_val_dt_sf, 
    aes(fill = gep), color = "black"
  ) +
  scale_fill_viridis_c(
    na.value = "lightgrey",
    labels = scales::label_number(scale_cut = scales::cut_short_scale())
  ) +
  theme_bw()

```





```{r}
# /*===== Depth to Groundwater Table =====*/
# Problem: Small coverage of data
# depth_to_gw_dt <- 
#   fread(file.path(raw_dir, "GroundwaterLevelData/AnnualDepthToGroundwater.csv"))

# depth_to_gw_sf <- 
#   depth_to_gw_dt %>%
#   st_as_sf(
#     coords = c("Lon", "Lat"), 
#     crs = 4326
#   )
```