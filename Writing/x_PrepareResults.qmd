---
title: "Prepare Results for Writing"
---

# Object:
+ Prepare maps and data tables for final results writing.

# Setup
```{r}
library(here)
i_am("Scr/Writing/x_PrepareResults.qmd")

# /*===== Load R packages =====*/
library(data.table)
library(dplyr)

library(terra)
library(sf)

library(ggplot2)
library(tidyterra)

# /*===== Base path configurations =====*/
source(here("Scr/Code/0_path_config.R"))

```


# ggplot Theme
```{r}
theme_plot <-
  theme_bw() +
  theme(
    legend.position = "bottom",
    axis.text = element_text(size = 14),
    axis.title = element_text(size = 16),
    legend.text = element_text(size = 14),
    legend.key.width = unit(2, "cm"),
    axis.title.x = element_text(vjust = -1),
    axis.title.y = element_text(vjust = 2),
    strip.text = element_text(size = 14),
    plot.title = element_text(hjust = 0.5),
    # text = element_text(family = "Times New Roman"),
    # --- Footnote --- #
    plot.caption = element_textbox_simple(hjust=0, size = 12)
  )


theme_map_facet <- 
  theme(
    legend.position = "bottom",
    legend.text = element_text(size = 14),
    legend.key.width = unit(2, "cm"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.x=element_blank(),
    axis.ticks.x=element_blank(),
    axis.text.y=element_blank(),
    axis.ticks.y=element_blank(),
    strip.text = element_text(size = 14),
    plot.title = element_text(hjust = 0.5),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    # text = element_text(family = "Times New Roman"),
    # --- Footnote --- #
    plot.caption = element_textbox_simple(hjust=0, size = 12)
    # --- Padding --- #
  )

theme_facet <- 
  theme(
    legend.position = "bottom",
    legend.text = element_text(size = 14),
    legend.key.width = unit(2, "cm"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.x=element_blank(),
    axis.ticks.x=element_blank(),
    axis.text.y=element_blank(),
    axis.ticks.y=element_blank(),
    strip.text = element_text(size = 14),
    plot.title = element_text(hjust = 0.5),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    # text = element_text(family = "Times New Roman"),
    # --- Footnote --- #
    plot.caption = element_textbox_simple(hjust=0, size = 12)
    # --- Padding --- #
  )
```



# Data Prerequisites
```{r}
# /*===== Watershed Boundary =====*/
hybas_sf <- 
  readRDS(file.path(int_dir, "case_hybas_tbl.rds")) %>%
  tidyr::unnest(cols = "tg_hybas_sf") %>%
  data.table() %>%
  .[,.(region = region_abbr, hybas_id = HYBAS_ID, geometry)] %>%
  st_as_sf() %>%
  st_transform(crs = 4326)

# /*===== Major Groundwater =====*/
gw_basins_sf <- 
    st_read(file.path(raw_dir, "h2wjr-te507/shapefiles/All_merged.shp")) %>%
    filter(WHYClass == 10) %>%
    st_transform(st_crs(hybas_sf))


# /*===== Country Boundary =====*/
ctry_bd <- 
  st_read(here(raw_dir, "z_ee_r250_correspondence.gpkg")) %>%
  select(iso3_r250_id, iso3_r250_label, iso3_r250_name, continent) %>%
  st_transform(st_crs(hybas_sf)) %>%
  filter(!continent %in% c("Antarctica",  "Seven seas (open ocean)" )) %>%
  mutate(
    region = case_when(
      continent == "Africa" ~ "af",
      continent == "Asia" ~ "as",
      continent == "Oceania" ~ "au",
      continent == "Europe" ~ "eu",
      continent == "North America" ~ "na",
      continent == "South America" ~ "sa"
    )
  )

# ggplot() + 
#   geom_sf(data = ctry_bd, aes(fill = region), color = "black")

# ggplot() + 
#   geom_sf(data = hybas_sf, fill = "lightblue", color = "black")
```



# Global Watershed laying over the Major Groundwater Basins

+ Major Groundwater Basins: 
+ 

```{r}
ggplot() + 
  # geom_sf(data = ctry_bd, fill = NA, color = "black") +
  geom_sf(data = hybas_sf, aes(fill = "Watersheds")) + 
  scale_fill_manual(
    name = "",
    values = c("Watersheds" = "lightblue")
  ) +
  theme_void() +
  theme(
    legend.position = "bottom"
  )
```


# Global Local Recharge Layer

```{r}
ls_regions <- unique(hybas_sf$region)

ls_l_layers <- list()

for (r in ls_regions){
  # r = "na"
  ls_l_layers[[r]] <- 
    rast(file.path(final_dir, "l_aligned", paste0("l_aligned_", r, ".tif")))
}

ctry_bd_wgs84 <- 
  st_transform(ctry_bd, crs = st_crs(ls_l_layers[[1]]))


# /*===========================================*/
#'= Local Recharge Map by Continent =
# /*===========================================*/
tg_r <- "na"

ctry_bd_wgs84_crop <- 
  st_intersects(
    ctry_bd_wgs84,
    ext(ls_l_layers[[tg_r]])
  )


fig_map_l_r <- 
  ggplot() + 
  geom_sf(
    data = filter(ctry_bd_wgs84_crop, region == tg_r),
    fill = NA, color = "black"
  ) + 
  geom_spatraster(
    data = ls_l_layers[[tg_r]],

  ) +
  scale_fill_viridis_c(
    name = "Local Recharge (mm)",
    na.value = NA
  ) +
  theme_void() +
  labs(
    title = paste0("Local Recharge in ", toupper(tg_r), " Region")
  ) +
  theme(
    legend.position = "right",
    plot.title = element_text(hjust = 0.5)
  )
```
